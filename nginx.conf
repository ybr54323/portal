server {
	listen 80;
	server_name localhost;
	gzip on;
	gzip_min_length 1000;
	gzip_proxied any;
	gzip_types *;
	gzip_vary on;
	client_max_body_size 1000m;

	charset utf-8;
	resolver kube-dns.kube-system.svc.cluster.local valid=5s;

	location / {
		root /usr/share/nginx/html;
		index index.html;
	}

	location /gateway {
		root /usr/share/nginx/html;
		index index.html;
		try_files $uri $uri/ /gateway/index.html;
	}
	set $gatewayUrl http://ds-gateway.ds-system.svc.cluster.local:8072;

	set $staticWeb http://ds-web-static.ds-system.svc.cluster.local:80;
	location /ds-web-static {
		proxy_pass $staticWeb;
	}

	# 通过服务名访问前端应用
	set $metadataWeb http://ds-server-metadata-web.ds-system.svc.cluster.local:80;
	location /ds-server-metadata-web {
		proxy_pass $metadataWeb;
	}
	set $standardWeb http://ds-data-standard-web.ds-system.svc.cluster.local:80;
	location /ds-data-standard-web {
		proxy_pass $standardWeb;
	}
	set $exchangeWeb http://grg-data-exchange-web.ds-system.svc.cluster.local:80;
	location /grg-data-exchange-web {
		proxy_pass $exchangeWeb;
	}

	set $sandboxWeb http://grg-security-web.ds-system.svc.cluster.local:80;
	# 数据沙箱前端
	location /dataSandbox/ {
		proxy_pass $sandboxWeb;
	}

	# 数据汇聚前端
	set $dataCollectWeb http://grg-data-collect-web.ds-system.svc.cluster.local:80;
	location /dataAggregation/ {
		proxy_pass $dataCollectWeb;
	}

	# 数据开发前端
	set $studioWeb http://grg-studio-web.ds-system.svc.cluster.local:80;
	location /magileDev/ {
		proxy_pass $studioWeb;
	}
	# 实时开发
	set $realtimeWeb http://grg-realtime-web.ds-system.svc.cluster.local:80;
	location /realtimeDev/ {
		proxy_pass $realtimeWeb;
	}

	# 数据清洗加工
	set $hopschedulerWeb http://hopscheduler-web.hopscheduler.svc.cluster.local:80;
	location /hopscheduler-web/ {
		proxy_pass $hopschedulerWeb;
	}

	# 数据可视化平台
	set $dvplatformWeb http://dvplatform-web.dvplatform.svc.cluster.local:80;
	location /dvplatform-web/ {
		proxy_pass $dvplatformWeb;
	}

	# share门户
	set $sharePortalWeb http://grg-data-share-portal-web.ds-system.svc.cluster.local:80;
	location /sharePortal/ {
		proxy_pass $sharePortalWeb;
	}

	# 门户
	set $exchangePortalWeb http://grg-data-exchange-portal-web.ds-system.svc.cluster.local:80;
	location /exchangePortal/ {
		proxy_pass $exchangePortalWeb;
	}


	set $tradeWeb http://ds-server-trade-web.ds-system.svc.cluster.local:80;
	# 数据厂商管理前端
	location /ds-server-trade-web/ {
		proxy_pass $tradeWeb;
	}


	# 数据库管理工具
	set $magilecubeWeb http://magilecube.magiledb.svc.cluster.local:80;
	location /magilecube/ {
		proxy_pass $magilecubeWeb;
		proxy_set_header Host $host:$server_port;
	}

	# 数据迁移
	set $migrateWeb http://migrate-web.magiledb.svc.cluster.local:80;
	location /migrate-web/ {
		proxy_pass $migrateWeb;
	}
	# 数据迁移API
	set $migrateApi http://migrate-api.magiledb.svc.cluster.local:8080;
	location /migrate-api/ {
		proxy_pass $migrateApi;
	}

	location ~ ^/grg-realtime-develop/(.*)$ {
		proxy_pass $gatewayUrl/$1?$args;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Real-IP $remote_addr;
	}

	location ~ ^/prod/(.*)$ {
		proxy_pass	$gatewayUrl/$1?$args;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Real-IP $remote_addr;
		client_max_body_size 1000m;
		proxy_buffer_size 128k;
		proxy_buffers 32 128k;
		proxy_busy_buffers_size 128k;
	}

	location ~ ^/spiderApi/(.*)$ {
		proxy_pass	$gatewayUrl/$1?$args;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Real-IP $remote_addr;
		client_max_body_size 1000m;
		proxy_buffer_size 128k;
		proxy_buffers 32 128k;
		proxy_busy_buffers_size 128k;
	}

	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root /usr/share/nginx/html;
	}

	# for davplatform-web
	location /grg-studio/ {
		#跨域
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Methods *;
		add_header Access-Control-Allow-Headers *;
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		proxy_pass $GRG_STUDIO_URL;
		client_max_body_size 1000m;
	}
	location /grg-studio-ex/ {
		#跨域
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Methods *;
		add_header Access-Control-Allow-Headers *;
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		client_max_body_size 1000m;
		proxy_pass $GRG_STUDIO_URL;
		fastcgi_connect_timeout 300s;
		fastcgi_send_timeout 300s;
		fastcgi_read_timeout 300s;
	}


	# dataAggregation
	location ~ ^/data-collect-service/(.*)$ {
		proxy_pass	$gatewayUrl/$1?$args;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Real-IP $remote_addr;
		#跨域
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
		add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
		client_max_body_size 1000m;
	}

	# 数据开发etl
	location /hopscheduler-api/ {
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
		add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
		proxy_pass $ETL_URL;
		client_max_body_size 1000m;
	}
	# 可视化
	location /dvplatform-api/ {
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
		add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
		proxy_pass $DVPLATFORM_URL;
		client_max_body_size 1000m;
	}


}
